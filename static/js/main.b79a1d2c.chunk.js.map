{"version":3,"sources":["core/user/actions.ts","pages/Main.tsx","shared/helpers/getColor.ts","shared/view/components/Button/Button.style.ts","shared/view/components/Button/Button.patterns.ts","shared/view/components/Button/Button.tsx","shared/view/components/Header/Authorized/Authorized.style.ts","shared/view/components/Header/Authorized/Authorized.tsx","shared/view/components/Warning/Warning.style.ts","shared/view/components/Warning/Warning.tsx","shared/view/components/Header/Unauthorized/Unauthorized.style.ts","shared/view/components/Header/Unauthorized/Unauthorized.tsx","shared/view/components/Header/Header.tsx","pages/Form/components/Event/Event.style.ts","pages/Form/components/Event/Event.tsx","core/form/actions.ts","shared/helpers/getMomentStatusColor.ts","shared/view/components/TableCell/TableCell.style.ts","shared/view/components/TableCell/TableCell.tsx","shared/view/components/Table/Table.style.ts","shared/view/components/Table/Table.tsx","pages/Form/components/Table/Table.style.ts","pages/Form/components/Table/Table.tsx","shared/view/components/ToolsPanel/ToolsPanel.style.ts","shared/view/components/ToolsPanel/Tool/Tool.style.ts","shared/view/components/ToolsPanel/Tool/Tool.tsx","shared/view/components/ToolsPanel/ToolsPanel.tsx","pages/Form/components/ToolsPanel/ToolsPanel.ru.ts","pages/Form/components/ToolsPanel/ToolsPanel.style.ts","pages/Form/components/ToolsPanel/ToolsPanel.tsx","core/tool/actions.ts","pages/Form/components/SubmitArea/SubmitArea.style.ts","pages/Form/components/SubmitArea/SubmitArea.tsx","pages/Form/Form.style.ts","pages/NotFound/NotFound.style.ts","pages/NotFound/NotFound.tsx","pages/Form/Form.tsx","core/event/actions.ts","App.tsx","reportWebVitals.js","core/user/reducer.ts","core/form/reducer.ts","core/tool/reducer.ts","core/event/reducer.ts","core/rootReducer.ts","shared/services/DB/Errors/Unauthorized.ts","shared/services/DB/Databases/Firebase/Config.ts","shared/services/DB/Databases/Firebase/Auth.ts","shared/services/DB/Databases/Firebase/Storage.ts","shared/services/DB/Auth/Auth.ts","shared/services/DB/Storage/Storage.ts","shared/services/DB/DB.ts","core/user/saga.ts","core/event/saga.ts","core/form/saga.ts","core/rootSaga.ts","index.js"],"names":["setAuthorized","user","type","payload","Main","getColor","color","Root","styled","button","props","background","border","Patterns","resolve","reject","loading","Button","label","view","disabled","onClick","header","Content","div","UserInfo","UserPhoto","img","UserName","LogOut","Authorized","name","lastName","photo","dispatch","useDispatch","src","Title","p","Description","Close","Warning","title","description","useState","displayed","setDisplayed","LogIn","PopupMessage","Unauthorized","Header","useSelector","store","status","details","h1","Event","state","event","changeForm","table","initialized","getMomentStatusColor","moment","Cell","td","TableCell","row","column","callBack","Hour","th","Day","Table","days","hours","matrix","map","hour","index","rowNumber","columnNumber","TableTitle","h2","form","tool","length","clickedRow","clickedColumn","Panel","Label","ColorBox","span","toolType","Text","Input","input","Tool","chosen","defaultChecked","ToolsPanel","items","chosenTool","item","vocabulary","setTool","SubmitButton","LoadingKeyframes","keyframes","Loading","Saved","SubmitArea","formStatus","userStatus","sendForm","submitButton","Page","tableWidth","NotFound","Form","eventId","useParams","tableSize","useEffect","id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","userReducer","action","Reducer","toolReducer","rootReducer","combineReducers","eventReducer","formReducer","message","Error","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Auth","firebase","apps","initializeApp","this","bindMethods","provider","auth","GoogleAuthProvider","Promise","signInWithPopup","result","getUserData","catch","error","console","log","signOut","onAuthStateChanged","displayName","photoURL","uid","nameArray","split","userId","signIn","bind","getUser","Storage","database","ref","set","once","getDataOutOfSnapShot","snapshot","val","saveTable","getTable","getEvent","FirebaseAuth","storage","FirebaseStorage","checkUser","call","put","watchList","takeLatest","select","eventDetails","setClearForm","downloadForm","rootSaga","all","userSaga","eventSaga","formSaga","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b79a1d2c.chunk.js","sourcesContent":["import User from '../../shared/types/User.types';\nimport { UserAction } from './user.types';\n\nconst checkUser = (): UserAction => ({\n  type: 'USER/CHECK',\n  payload: null,\n});\n\nconst setAuthorized = (user: User): UserAction => ({\n  type: 'USER/AUTHORIZED',\n  payload: user,\n});\n\nconst setUnauthorized = (): UserAction => ({\n  type: 'USER/UNAUTHORIZED',\n  payload: null\n});\n\nconst signIn = (): UserAction => ({\n  type: 'USER/SIGNIN',\n  payload: null\n});\n\nconst signOut = (): UserAction => ({\n  type: 'USER/SIGNOUT',\n  payload: null\n});\n\nexport {\n  checkUser,\n  setAuthorized,\n  setUnauthorized,\n  signIn,\n  signOut,\n};\n","const Main = (): JSX.Element => {\n  return (\n    <>\n      <h1>Main</h1>\n    </>\n  )\n};\n\nexport default Main;\n","import { Color } from '../types/Color.types';\n\nconst getColor = (color: Color) => {\n  return {\n    'black': '#333',\n    'red': '#ff5e78',\n    'blue': '#51c2d5',\n    'pink': '#ffb4b4',\n    'green': '#75cfb8',\n    'grey': '#eee',\n    'white': 'white',\n  }[color];\n};\n\nexport default getColor;\n","import styled from 'styled-components';\nimport getColor from '../../../helpers/getColor';\nimport { StyleProps } from './Button.types';\n\nconst Root = styled.button<StyleProps>`\n  width: 100%;\n  height: 50px;\n  font-size: 16px;\n  font-weight: bold;\n  color: ${(props: StyleProps) => getColor(props.color)};\n  background: ${(props: StyleProps) => getColor(props.background)};\n  border-radius: 5px;\n  cursor: pointer;\n\n  border: ${(props: StyleProps) => props.border ? `2px solid ${getColor(props.border)}` : 'none'};\n\n  &:hover {\n    opacity: 0.5;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n`;\n\nexport {\n  Root,\n};\n","import { StylePatterns } from './Button.types';\n\nconst Patterns: StylePatterns = {\n  resolve: {\n    color: 'white',\n    background: 'green',\n  },\n  reject: {\n    color: 'red',\n    background: 'white',\n    border: 'red',\n  },\n  loading: {\n    color: 'white',\n    background: 'blue',\n  }\n};\n\nexport default Patterns;\n","import { Props } from './Button.types';\nimport { Root } from './Button.style';\nimport Patterns from './Button.patterns';\n\nconst Button = (props: Props): JSX.Element => {\n  const {\n    label,\n    view,\n    type = 'button',\n    disabled = false,\n    onClick = () => {},\n  } = props;\n\n  const { color, border, background } = typeof view === 'string' ? Patterns[view] : view;\n\n  return (\n    <Root\n      type={type}\n      color={color}\n      border = {border}\n      background = {background}\n      disabled = {disabled}\n      onClick={onClick}\n    >{label}</Root>\n  );\n}\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Root = styled.header`\n  grid-area: header;\n  width: 100%;\n  padding-left: 121px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: -65px;\n`;\n\nconst UserPhoto = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 15px;\n`;\n\nconst UserName = styled.div`\n  font-size: 18px;\n`;\n\nconst LogOut = styled.div`\n  width: 120px;\n`;\n\nexport {\n  Root,\n  Content,\n  UserInfo,\n  UserPhoto,\n  UserName,\n  LogOut,\n}","import { useDispatch } from 'react-redux';\n\nimport { signOut as signOutAction } from '../../../../../core/user/actions';\nimport Button from '../../Button/Button';\n\nimport { Root, Content, UserInfo, UserPhoto, UserName, LogOut } from './Authorized.style'\nimport { Props } from './Authorized.types';\n\nconst Authorized = (props: Props) => {\n  const { name, lastName, photo } = props.user;\n  const dispatch = useDispatch();\n\n  const signOut = () => dispatch(signOutAction());\n\n  return (\n    <Root>\n      <Content>\n        <UserInfo>\n          <UserPhoto src={photo} />\n          <UserName>{`${name} ${lastName}`}</UserName>\n        </UserInfo>\n\n        <LogOut>\n          <Button view=\"reject\" label=\"Выйти\" onClick={signOut}/>\n        </LogOut>\n      </Content>\n    </Root>\n  );\n}\n\nexport default Authorized;\n","import styled from 'styled-components';\nimport getColor from '../../../helpers/getColor';\n\nconst Root = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 20px;\n  color: ${getColor('red')};\n  border: 1px solid ${getColor('red')};\n  border-radius: 5px;\n  background: ${getColor('pink')};\n`;\n\nconst Title = styled.p`\n  width: 100%;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst Description = styled.p`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst Close = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n  line-height: 20px;\n  opacity: 0.3;\n  border: 0;\n  background: none;\n  cursor: pointer;\n`;\n\nexport {\n  Root,\n  Title,\n  Description,\n  Close,\n};\n","import { useState } from \"react\";\nimport { Root, Description, Title, Close } from \"./Warning.style\";\nimport { Props } from \"./Warning.types\";\n\nconst Warning = (props: Props) => {\n  const { title, description } = props;\n  const [displayed, setDisplayed] = useState(true);\n\n  const close = () => {\n    setDisplayed(false);\n  }\n\n  return displayed ? (\n    <Root>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      <Close type=\"button\" onClick={close}>&#10006;</Close>\n    </Root>\n  ) : <></>;\n};\n\nexport default Warning;\n","import styled from 'styled-components';\n\nconst Root = styled.header`\n  grid-area: header;\n  width: 100%;\n  padding-left: 121px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n`;\n\nconst LogIn = styled.div`\n  width: 120px;\n`;\n\nconst PopupMessage = styled.div`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nexport {\n  Root,\n  Content,\n  LogIn,\n  PopupMessage,\n}","import { useDispatch } from 'react-redux';\n\nimport { signIn as signInAction } from '../../../../../core/user/actions';\nimport Button from '../../Button/Button';\nimport Warning from '../../Warning/Warning';\n\nimport { Content, Root, LogIn, PopupMessage } from \"./Unauthorized.style\";\n\nconst Unauthorized = () => {\n  const dispatch = useDispatch();\n  const signIn = () => dispatch(signInAction());\n\n  return (\n    <Root>\n      <Content>\n        <LogIn>\n          <Button view=\"resolve\" label=\"Войти\" onClick={signIn}/>\n        </LogIn>\n      </Content>\n\n      <PopupMessage>\n        <Warning title=\"Внимание! Для дальнейших действий требуется авторизация!\" description=\"Отправка данных доступна только авторизованным пользователям\" />\n      </PopupMessage>\n    </Root>\n  );\n}\n\nexport default Unauthorized;\n","import { useSelector } from 'react-redux';\nimport { ReduxStore } from '../../../../core/rootReducer';\nimport Authorized from './Authorized/Authorized';\nimport Unauthorized from './Unauthorized/Unauthorized';\n\nconst Header = () => {\n  const { status, details } = useSelector((store: ReduxStore) => store.user);\n\n  if (status === 'AUTHORIZED' && details) return <Authorized user={details} />\n  return <Unauthorized />\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Root = styled.div`\n  grid-area: event;\n  padding-left: 121px;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst Description = styled.p`\n  margin-top: 10px;\n  color: #333;\n  padding-bottom: 30px;\n  border-bottom: 1px solid #eee;\n`;\n\nexport {\n  Root,\n  Title,\n  Description,\n};\n","import { useSelector } from 'react-redux';\nimport { ReduxStore } from '../../../../core/rootReducer';\nimport { Root, Title, Description } from './Event.style';\n\nconst Event = (): JSX.Element => {\n  const { name, description } = useSelector((state: ReduxStore) => state.event);\n\n  return (\n    <Root>\n      <Title>{ name }</Title>\n      <Description>{ description }</Description>\n    </Root>\n  );\n};\n\nexport default Event;\n","import MomentStatus from '../../shared/types/MomentStatus.types';\nimport { FormAction } from './form.types';\n\nconst downloadForm = (): FormAction => ({\n  type: 'FORM/DOWNLOAD',\n  payload: {\n    status: 'DOWNLOADING',\n  },\n});\n\nconst formSynchronized = (): FormAction => ({\n  type: 'FORM/SYNCHRONIZED',\n  payload: {\n    status: 'SYNCHRONIZED',\n  },\n});\n\nconst changeForm = (table: MomentStatus[][]): FormAction => ({\n  type: 'FORM/CHANGED',\n  payload: {\n    status: 'CHANGED',\n    initialized: true,\n    table,\n  },\n});\n\nconst saveForm = (): FormAction => ({\n  type: 'FORM/SAVE',\n  payload: {\n    status: 'SAVING',\n  },\n});\n\nexport {\n  downloadForm,\n  formSynchronized,\n  changeForm,\n  saveForm,\n};\n","import MomentStatus from '../types/MomentStatus.types';\nimport getColor from './getColor';\n\nconst getMomentStatusColor = (moment: MomentStatus) => {\n  switch (moment) {\n    case 'busy': return getColor('red');\n    case 'undesirable': return getColor('pink');\n    case 'free': return getColor('blue');\n    case 'preferred': return getColor('green');\n    default: return '';\n  }\n}\n\nexport default getMomentStatusColor;\n","import styled from 'styled-components';\nimport getMomentStatusColor from '../../../helpers/getMomentStatusColor';\nimport { StyleProps } from './TableCell.types';\n\nconst Cell = styled.td<StyleProps>`\n  width: 50px;\n  height: 50px;\n  background: ${(props: StyleProps) => getMomentStatusColor(props.status)};\n  cursor: pointer;\n  border: 0 solid white;\n\n  &:hover {\n    border: 2px solid white;\n  }\n`;\n\nexport {\n  Cell,\n};\n","import { Cell } from './TableCell.style';\nimport { Props } from './TableCell.types';\n\nconst TableCell = ({\n  status, row, column, callBack,\n}: Props): JSX.Element => <Cell status={status} onClick={ () => callBack(row, column) }/>\n\nexport default TableCell;\n","import styled from 'styled-components';\n\nconst Hour = styled.th`\n  height: 50px;\n  font-size: 15px;\n  color: #333;\n  border-radius: 5px 5px 0 0;\n  background: #eee;\n`;\n\nconst Day = styled.th`\n  width: 120px;\n  height: 50px;\n  font-size: 15px;\n  text-align: left;\n  text-transform: capitalize;\n  color: #333;\n  padding-left: 10px;\n  border-radius: 5px 0 0 5px;\n  background: #eee;\n`;\n\nexport {\n  Hour,\n  Day,\n};\n","import TableCell from '../TableCell/TableCell';\nimport { Hour, Day } from './Table.style';\nimport { Props } from './Table.types';\n\nconst Table = (props: Props): JSX.Element => {\n  const { days, hours, matrix, callBack } = props;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n          { hours.map((hour, index) => <Hour key={`${index}`}>{ hour }</Hour>) }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          matrix.map((row, rowNumber) => (\n            <tr key={`${rowNumber}`}>\n              <Day>{ days[rowNumber] }</Day>\n              { row.map((column, columnNumber) => <TableCell\n                  key={`${rowNumber}${columnNumber}`}\n                  status={ matrix[rowNumber][columnNumber] }\n                  row={ rowNumber }\n                  column={ columnNumber }\n                  callBack={ callBack } \n                />) }\n            </tr>\n          )) \n        }\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import styled from 'styled-components';\n\nconst Root = styled.div`\n  grid-area: table;\n`;\n\nconst TableTitle = styled.h2`\n  max-width: 300px;\n  margin-left: 122px;\n  margin-bottom: 10px;\n  color: #333;\n`;\n\nexport {\n  Root,\n  TableTitle,\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { changeForm } from '../../../../core/form/actions';\nimport { ReduxStore } from '../../../../core/rootReducer';\nimport CalendarTable from '../../../../shared/view/components/Table/Table';\nimport { Root, TableTitle } from './Table.style';\n\nconst Table = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { days, hours } = useSelector((state: ReduxStore) => state.event);\n  const { table } = useSelector((state: ReduxStore) => state.form);\n  const tool = useSelector((state: ReduxStore) => state.tool);\n\n  const clickHandler = (clickedRow: number, clickedColumn: number) => {\n    dispatch(changeForm(table.map((row, rowNumber) => {\n      return row.map((column, columnNumber) => {\n        if (clickedRow === rowNumber && clickedColumn === columnNumber) return tool;\n        return table[rowNumber][columnNumber];\n      });\n    })));\n  }\n\n  if (days.length && hours.length) return (\n    <Root>\n      <TableTitle>Выберите время, когда вам удобно встретиться:</TableTitle>\n      <CalendarTable days={days} hours={hours} matrix={table} callBack={clickHandler} />\n    </Root>\n  );\n\n  return <></>;\n};\n\nexport default Table;\n","import styled from 'styled-components';\n\nconst Panel = styled.form`\n  width: 280px;\n`;\n\nconst Title = styled.p`\n  padding-left: 65px;\n  margin: 10px 0;\n  font-size: 20px;\n  font-weight: bold;\n  color: #333;\n`;\n\nexport {\n  Panel,\n  Title,\n};\n","import styled from 'styled-components';\nimport getMomentStatusColor from '../../../../helpers/getMomentStatusColor';\nimport { StyleProps } from './Tool.types';\n\nconst Label = styled.label`\n  display: flex;\n  width: 100%;\n  margin-top: 5px;\n  cursor: pointer;\n`;\n\nconst ColorBox = styled.span`\n  display: block;\n  min-width: 50px;\n  height: 50px;\n  background: ${(props: StyleProps) => getMomentStatusColor(props.toolType)};\n  border-radius: 5px 0 0 5px;\n  z-index: 1;\n  transition-property: min-width;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n`;\n\nconst Text = styled.span`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  padding: 0 15px;\n  background: #eee;\n  border-radius: 0 5px 5px 0;\n`;\n\nconst Input = styled.input<StyleProps>`\n  display: none;\n\n  &:checked ~ ${ColorBox} {\n    min-width: 60px;\n  }\n\n  &:checked ~ ${Text} {\n    border-top: 1px solid;\n    border-right: 1px solid;\n    border-bottom: 1px solid;\n    border-color: ${(props: StyleProps) => getMomentStatusColor(props.toolType)};\n  }\n`;\n\nexport {\n  Label,\n  Input,\n  Text,\n  ColorBox,\n};\n","import Props from './Tool.types'\nimport { Label, Input, Text, ColorBox } from './Tool.style';\n\nconst Tool = ({\n  toolType,\n  label,\n  chosen,\n  callBack,\n}: Props): JSX.Element => {\n  return (\n    <Label onClick={() => callBack ? callBack(toolType) : null}>\n      <Input toolType={toolType} type=\"radio\" name=\"tool\" defaultChecked={chosen}/>\n      <ColorBox toolType={toolType} />\n      <Text>{label}</Text>\n    </Label>\n  )\n}\n\nexport default Tool;\n","import { Panel, Title } from './ToolsPanel.style';\nimport Props from './ToolsPanel.types';\nimport Tool from './Tool/Tool';\n\nconst ToolsPanel = (props: Props): JSX.Element => {\n  const { title, items, chosenTool, callBack } = props;\n\n  return (\n    <Panel>\n      <Title>{title}</Title>\n      {items.map((item, index) => <Tool key={`${index}`} {...item} callBack={callBack} chosen={chosenTool === item.toolType}/>)}\n    </Panel>\n  );\n}\n\nexport default ToolsPanel;\n","import { Vocabulary } from './ToolPanel.types';\n\nconst vocabulary: Vocabulary = {\n  title: 'Выбранное время:',\n  items: [\n    {\n      toolType: 'busy',\n      label: 'Точно занято',\n    },\n    {\n      toolType: 'undesirable',\n      label: 'Возможно занято',\n    },\n    {\n      toolType: 'free',\n      label: 'Свободно'\n    },\n    {\n      toolType: 'preferred',\n      label: 'Предпочтительно'\n    }\n  ]\n}\n\nexport default vocabulary;\n","import styled from 'styled-components';\n\nconst Root = styled.div`\n  grid-area: toolsPanel;\n  align-self: end;\n`;\n\nexport {\n  Root,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ReduxStore } from '../../../../core/rootReducer';\nimport { setTool } from '../../../../core/tool/actions';\nimport MomentStatus from '../../../../shared/types/MomentStatus.types';\nimport Panel from '../../../../shared/view/components/ToolsPanel/ToolsPanel';\nimport vocabulary from './ToolsPanel.ru';\nimport { Root } from './ToolsPanel.style';\n\nconst ToolsPanel = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const chosenTool = useSelector((store: ReduxStore) => store.tool);\n  const { days, hours } = useSelector((state: ReduxStore) => state.event);\n\n  const changeTool = (tool: MomentStatus) => {\n    dispatch(setTool(tool));\n  }\n\n  if (days.length && hours.length) return (\n    <Root>\n      <Panel {...{\n        ...vocabulary,\n        chosenTool,\n        callBack: changeTool\n      }} />\n    </Root>\n  );\n\n  return <></>;\n};\n\nexport default ToolsPanel;\n","import MomentStatus from '../../shared/types/MomentStatus.types';\nimport { ToolAction } from './tool.types'\n\nconst setTool = (tool: MomentStatus): ToolAction => ({\n  type: 'TOOL/SET',\n  payload: tool,\n})\n\nexport {\n  setTool,\n};\n","import styled, { keyframes } from 'styled-components';\nimport getColor from '../../../../shared/helpers/getColor';\n\nconst Root = styled.div`\n  grid-area: submitArea;\n  margin-top: 40px;\n`;\n\nconst SubmitButton = styled.div`\n  display: flex;\n  margin-top: 5px;\n`;\n\nconst LoadingKeyframes = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 50px;\n  height: 50px;\n  margin-right: 5px;\n  border-radius: 5px;\n  background: ${getColor('blue')};\n\n  &:after {\n  content: ' ';\n  display: block;\n  box-sizing: border-box;\n  width: 80%;\n  height: 80%;\n  margin: 0px;\n  border-radius: 50%;\n  border: 5px solid white;\n  border-color: white transparent white transparent;\n  animation: ${LoadingKeyframes} 1.2s linear infinite;\n  }\n`;\n\nconst Saved = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  min-width: 50px;\n  height: 50px;\n  padding-top: 5px;\n  margin-right: 5px;\n  border-radius: 5px;\n  background: ${getColor('green')};\n\n  ::before {\n    position: absolute;\n    top: 25px;\n    left: 20px;\n    height: 15px;\n    width: 5px;\n    background-color: white;\n    content: '';\n    transform: rotate(-45deg);\n    transform-origin: left bottom;\n  }\n\n  &::after {\n    position: absolute;\n    left: 20px;\n    top: 35px;\n    height: 5px;\n    width: 30px;\n    background-color: white;\n    content: '';\n    transform: rotate(-45deg);\n    transform-origin: left bottom;\n  }\n`;\n\nexport {\n  Root,\n  SubmitButton,\n  Loading,\n  Saved,\n}","import { useDispatch, useSelector } from 'react-redux';\n\nimport { changeForm, saveForm } from '../../../../core/form/actions';\nimport { ReduxStore } from '../../../../core/rootReducer';\nimport Button from '../../../../shared/view/components/Button/Button';\n\nimport { Root, SubmitButton, Loading, Saved } from './SubmitArea.style';\n\nconst SubmitArea = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { status: formStatus } = useSelector((state: ReduxStore) => state.form);\n  const { status: userStatus } = useSelector((state: ReduxStore) => state.user);\n  const { days, hours } = useSelector((state: ReduxStore) => state.event);\n\n  const clearTable = () => {\n    dispatch(changeForm(days.map(() => hours.map(() => 'free'))));\n  }\n\n  const sendForm = () => {\n    dispatch(saveForm());\n  }\n\n  const submitButton = () => {\n    switch (formStatus) {\n      case 'SAVING': return <Button view=\"loading\" label=\"Сохраняем...\" />;\n      case 'SYNCHRONIZED': return <Button view=\"resolve\" label=\"Сохранено\" disabled={true} />;\n      default: {\n        if (userStatus === 'AUTHORIZED') return <Button view=\"resolve\" label=\"Сохранить\" onClick={sendForm}/>;\n        return <Button view=\"resolve\" label=\"Сохранить\" disabled={true} />;\n      }\n    }\n  }\n\n  return (\n    <Root>\n      <Button view=\"reject\" label=\"Очистить\" onClick={clearTable} />\n      <SubmitButton>\n        { formStatus === 'SAVING' && <Loading /> }\n        { formStatus === 'SYNCHRONIZED' && <Saved /> }\n        { submitButton() }\n      </SubmitButton>\n    </Root>\n  );\n};\n\nexport default SubmitArea;\n","import styled from 'styled-components';\nimport { StyleProps } from './Form.types';\n\nconst Page = styled.div<StyleProps>`\n  display: grid;\n  grid-template-columns: auto ${(props: StyleProps) => `${props.tableWidth}px`} 280px auto;\n  grid-template-rows: max-content max-content max-content;\n  grid-template-areas:\n    \". header header .\"\n    \". event event .\"\n    \". table toolsPanel .\"\n    \". . submitArea .\";\n  grid-column-gap: 50px;\n  grid-row-gap: 10px;\n  padding-bottom: 50px;\n`;\n\nexport {\n  Page,\n}\n","import styled from 'styled-components';\nimport getColor from '../../shared/helpers/getColor';\n\nconst Root = styled.div`\n  display: grid;\n  grid-template-columns: auto 800px auto;\n  grid-template-rows: max-content max-content max-content;\n  grid-template-areas:\n    \". header .\"\n    \". title .\"\n    \". description .\";\n  grid-column-gap: 50px;\n  grid-row-gap: 10px;\n  padding-bottom: 50px;\n`;\n\nconst Title = styled.h1`\n  grid-area: title;\n  padding-left: 121px;\n  font-size: 100px;\n  color: ${getColor('pink')};\n`;\n\nconst Description = styled.p`\n  grid-area: description;\n  padding-left: 121px;\n  font-size: 20px;\n  color: ${getColor('red')};\n`;\n\nexport {\n  Root,\n  Title,\n  Description,\n};\n","import Header from '../../shared/view/components/Header/Header';\nimport { Root, Title, Description } from './NotFound.style';\n\nconst NotFound = (): JSX.Element => {\n  return (\n    <Root>\n      <Header />\n      <Title>404</Title>\n      <Description>К сожалению, указанная Вами страница не существует :(</Description>\n    </Root>\n  );\n};\n\nexport default NotFound;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { ReduxStore } from '../../core/rootReducer';\nimport { getEvent } from '../../core/event/actions';\nimport Header from '../../shared/view/components/Header/Header';\n\nimport Event from './components/Event/Event';\nimport Table from './components/Table/Table';\nimport ToolsPanel from './components/ToolsPanel/ToolsPanel';\nimport SubmitArea from './components/SubmitArea/SubmitArea';\nimport { Page } from './Form.style';\nimport NotFound from '../NotFound/NotFound';\n\nconst Form = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { eventId } = useParams() as { eventId: string };\n  const { status, hours } = useSelector((state: ReduxStore) => state.event);\n\n  let tableSize = hours.length * 50 + hours.length - 1 + 121;\n  if (tableSize < 375) tableSize = 375;\n\n  useEffect(() => {\n    dispatch(getEvent(eventId as string));\n  }, [dispatch, eventId])\n\n  if (status === 'NOTFOUND') return <NotFound />;\n\n  return (\n    <Page tableWidth={tableSize}>\n      <Header />\n      <Event />\n      <Table />\n      <ToolsPanel />\n      <SubmitArea />\n    </Page>\n  );\n}\n\nexport default Form;\n","import { EventAction, EventDetails } from './event.types';\n\nconst getEvent = (id: string): EventAction => ({\n  type: 'EVENT/GET',\n  payload: {\n    status: 'GETTING_EVENT',\n    id,\n  },\n});\n\nconst eventReady = (details: EventDetails): EventAction => ({\n  type: 'EVENT/READY',\n  payload: {\n    status: 'READY',\n    ...details,\n  },\n});\n\nconst setError = (): EventAction => ({\n  type: 'EVENT/NOTFOUND',\n  payload: {\n    status: 'NOTFOUND',\n  },\n});\n\nexport {\n  getEvent,\n  eventReady,\n  setError,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { ReduxStore } from './core/rootReducer';\nimport { checkUser } from './core/user/actions';\nimport Main from './pages/Main';\nimport Form from './pages/Form/Form';\nimport NotFound from './pages/NotFound/NotFound';\n\nconst App = (): JSX.Element => {\n  const user = useSelector((store: ReduxStore) => store.user);\n  const dispatch = useDispatch();\n  \n  if (user.status === 'INITIAL') dispatch(checkUser());\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/form/:eventId\" component={Form} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserAction, UserState } from './user.types';\n\nconst initialState: UserState = {\n  status: 'INITIAL',\n  details: null\n}\n\nconst userReducer = (state: UserState = initialState, action: UserAction): UserState => {\n  switch (action.type) {\n    case 'USER/CHECK': return {\n      status: 'CHECKING',\n      details: null,\n    };\n    case 'USER/AUTHORIZED': return {\n      status: 'AUTHORIZED',\n      details: action.payload,\n    }\n    case 'USER/UNAUTHORIZED': return {\n      status: 'UNAUTHORIZED',\n      details: null,\n    }\n    case 'USER/SIGNIN': return {\n      status: 'SIGNIN',\n      details: null,\n    }\n    case 'USER/SIGNOUT': return {\n      status: 'SIGNOUT',\n      details: null,\n    }\n    default: return state;\n  }\n}\n\nexport default userReducer;\n","import { Form, FormAction } from './form.types';\n\nconst initialState: Form = {\n  status: 'INITIAL',\n  initialized: false,\n  table: [[]]\n}\n\nconst Reducer = (state: Form = initialState, action: FormAction): Form => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'FORM/DOWNLOAD':\n    case 'FORM/SYNCHRONIZED':\n    case 'FORM/SAVE':\n    case 'FORM/CHANGED': return {\n      ...state,\n      ...payload,\n    };\n    default: return state;\n  };\n};\n\nexport default Reducer;\n","import MomentStatus from '../../shared/types/MomentStatus.types';\nimport { ToolAction } from './tool.types';\n\nconst toolReducer = (state: MomentStatus = 'free', action: ToolAction): MomentStatus => {\n  switch (action.type) {\n    case 'TOOL/SET': return action.payload;\n    default: return state;\n  }\n}\n\nexport default toolReducer;\n","import { Event, EventAction } from './event.types';\n\nconst initialState: Event = {\n  status: 'INITIAL',\n  id: '',\n  name: '',\n  description: '',\n  days: [],\n  hours: [],\n}\n\nconst Reducer = (state: Event = initialState, action: EventAction): Event => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'EVENT/GET':\n    case 'EVENT/READY':\n    case 'EVENT/NOTFOUND': return {\n      ...state,\n      ...payload,\n    };\n    default: return state;\n  };\n};\n\nexport default Reducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './user/reducer';\nimport formReducer from './form/reducer';\nimport toolReducer from './tool/reducer';\nimport eventReducer from './event/reducer';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  event: eventReducer,\n  form: formReducer,\n  tool: toolReducer,\n});\n\ntype ReduxStore = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\nexport type { ReduxStore };\n","class Unauthorized extends Error {\n  constructor(message = 'User is not authorized.') {\n    super(message);\n\n    this.name = 'Unauthorized';\n  }\n}\n\nexport default Unauthorized;\n","const config = {\n  apiKey: \"AIzaSyCd6Yj2EjJf1czNTP-1RsOfaMrJLkle73A\",\n  authDomain: \"calendar-714ec.firebaseapp.com\",\n  databaseURL: \"https://calendar-714ec-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"calendar-714ec\",\n  storageBucket: \"calendar-714ec.appspot.com\",\n  messagingSenderId: \"391494652034\",\n  appId: \"1:391494652034:web:5f241cdd78c5509daaa49b\"\n};\n\nexport default config;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport { User } from '../../DB.types';\nimport Unauthorized from '../../Errors/Unauthorized';\nimport { IAuth } from '../Databases.types';\n\nimport config from './Config';\n\nclass Auth implements IAuth {\n  constructor() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    this.bindMethods();\n  }\n\n  public signIn(): Promise<User> {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    return new Promise((resolve, reject) => {\n      firebase.auth()\n        .signInWithPopup(provider)\n        .then((result) => {\n          if (result.user) resolve(this.getUserData(result.user));\n          else reject();\n        })\n        .catch((error) => console.log(error));\n    });\n  }\n\n  public signOut(): Promise<null> {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signOut().then(() => {\n        resolve(null);\n      }).catch((error) => {\n        console.log(error);\n      });\n    });\n  }\n\n  public getUser(): Promise<User> {\n    return new Promise((resolve, reject) => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) resolve(this.getUserData(user));\n        else reject(new Unauthorized());\n      });\n    });\n  }\n\n  private getUserData(user: firebase.User): User {\n    const { displayName, photoURL, uid } = user;\n    const nameArray = displayName?.split(' ');\n\n    return {\n      userId: uid,\n      name: nameArray ? nameArray[0] : '',\n      lastName: nameArray ? nameArray[1] : '',\n      photo: photoURL || '',\n    };\n  }\n\n  private bindMethods() {\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n}\n\nexport default Auth;\n","import firebase from 'firebase';\n\nimport MomentStatus from '../../../../types/MomentStatus.types';\nimport Event from '../../../../types/Event.types';\nimport { IStorage } from '../Databases.types';\n\nimport config from './Config';\n\nclass Storage implements IStorage {\n  constructor() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  public saveTable(eventId: string, userId: string, table: MomentStatus[][]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      firebase.database().ref(`tables/${eventId}/${userId}`).set(table, (error) => {\n        if (error) reject(error);\n        resolve();\n      });\n    });\n  }\n\n  public getTable(eventId: string, userId: string): Promise<MomentStatus[][] | null> {\n    return firebase.database().ref(`tables/${eventId}/${userId}`)\n      .once('value')\n      .then(this.getDataOutOfSnapShot);\n  }\n\n  public getEvent(eventId: string): Promise<Event | null> {\n    return firebase.database().ref(`events/${eventId}`)\n      .once('value')\n      .then(this.getDataOutOfSnapShot);\n  }\n\n  private getDataOutOfSnapShot(snapshot: firebase.database.DataSnapshot) {\n    return snapshot.val();\n  }\n}\n\nexport default Storage;\n","import { IAuth } from '../Databases/Databases.types';\nimport { User } from '../DB.types';\n\nclass Auth {\n  private database: IAuth;\n\n  private user: User | null = null;\n\n  constructor(database: IAuth) {\n    this.database = database;\n    this.bindMethods();\n  }\n\n  public async signIn(): Promise<User> {\n    this.user = await this.database.signIn();\n    return this.user;\n  }\n\n  public signOut(): Promise<null> {\n    this.user = null;\n    return this.database.signOut();\n  }\n\n  public async getUser(): Promise<User> {\n    if (!this.user) this.user = await this.database.getUser();\n    return this.user;\n  }\n\n  private bindMethods() {\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n}\n\nexport default Auth;\n","import MomentStatus from '../../../types/MomentStatus.types';\nimport Event from '../../../types/Event.types';\nimport { IStorage, IAuth } from '../Databases/Databases.types';\n\nclass Storage {\n  private database: IStorage;\n\n  private auth: IAuth;\n\n  constructor(database: IStorage, auth: IAuth) {\n    this.database = database;\n    this.auth = auth;\n  }\n\n  public async saveTable(eventId: string, table: MomentStatus[][]): Promise<void> {\n    const { userId } = await this.auth.getUser();\n    return this.database.saveTable(eventId, userId, table);\n  }\n\n  public async getTable(eventId: string): Promise<MomentStatus[][] | null> {\n    const { userId } = await this.auth.getUser();\n    return this.database.getTable(eventId, userId);\n  }\n\n  public getEvent(eventId: string): Promise<Event | null> {\n    return this.database.getEvent(eventId);\n  }\n}\n\nexport default Storage;\n","import FirebaseAuth from './Databases/Firebase/Auth';\nimport FirebaseStorage from './Databases/Firebase/Storage';\nimport Auth from './Auth/Auth';\nimport Storage from './Storage/Storage';\n\nconst firebaseAuth = new FirebaseAuth();\nconst auth = new Auth(firebaseAuth);\n\nconst firebaseStorage = new FirebaseStorage();\nconst storage = new Storage(firebaseStorage, auth);\n\nexport {\n  auth,\n  storage,\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { auth } from '../../shared/services/DB/DB';\nimport User from '../../shared/types/User.types';\nimport { setAuthorized, setUnauthorized } from './actions';\n\nfunction* checkUser(): Generator {\n  try {\n    const user: User = (yield call(auth.getUser)) as User;\n    yield put(setAuthorized(user));\n  } catch (error) {\n    yield put(setUnauthorized());\n  }\n}\n\nfunction* signIn(): Generator {\n  try {\n    const user: User = (yield call(auth.signIn)) as User;\n    yield put(setAuthorized(user));\n  } catch (error) {\n    yield put(setUnauthorized());\n  }\n}\n\nfunction* signOut(): Generator {\n  try {\n    yield call(auth.signOut);\n    yield put(setUnauthorized());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst watchList = [\n  takeLatest('USER/CHECK', checkUser),\n  takeLatest('USER/SIGNIN', signIn),\n  takeLatest('USER/SIGNOUT', signOut),\n]\n\nexport default watchList;\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\n\nimport { storage } from '../../shared/services/DB/DB';\nimport { downloadForm } from '../form/actions';\nimport { ReduxStore } from '../rootReducer';\n\nimport { eventReady, setError } from './actions';\nimport { Event, EventDetails } from './event.types';\n\nfunction* getEvent(): Generator {\n  try {\n    const { id } = (yield select((state: ReduxStore) => state.event)) as Event;\n    const eventDetails = (yield call(() => storage.getEvent(id))) as EventDetails;\n    if (eventDetails) {\n      yield put(eventReady(eventDetails));\n      yield put(downloadForm());\n    } else yield put(setError());\n  } catch (error) {\n    yield put(setError());\n    console.log(error);\n  }\n}\n\nconst watchList = [\n  takeLatest('EVENT/GET', getEvent),\n]\n\nexport default watchList;\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\n\nimport { storage } from '../../shared/services/DB/DB';\nimport MomentStatus from '../../shared/types/MomentStatus.types';\nimport { Event } from '../event/event.types';\nimport { Form } from './form.types';\nimport { ReduxStore } from '../rootReducer';\n\nimport { changeForm, formSynchronized } from './actions';\n\nfunction* setClearForm(): Generator {\n  const { days, hours } = (yield select((state: ReduxStore) => state.event)) as Event;\n  yield put(changeForm(days.map(() => hours.map(() => 'free'))));\n}\n\nfunction* downloadForm(): Generator {\n  try {\n    const { id } = (yield select((state: ReduxStore) => state.event)) as Event;\n    const form = (yield call(() => storage.getTable(id))) as MomentStatus[][];\n    if (form) {\n      yield put(changeForm(form));\n      yield put(formSynchronized());\n    } else {\n      const { initialized } = (yield select((state: ReduxStore) => state.form)) as Form;\n      if (!initialized) yield setClearForm();\n    }\n  } catch (error) {\n    switch (error.name) {\n      case 'Unauthorized': {\n        console.log('Unauthorized');\n        yield setClearForm();\n        break;\n      }\n      default: console.log(error);\n    }\n  }\n}\n\nfunction* sendForm(): Generator {\n  try {\n    const { id } = (yield select((state: ReduxStore) => state.event)) as Event;\n    const table = (yield select((state: ReduxStore) => state.form.table)) as MomentStatus[][];\n    yield call(() => storage.saveTable(id, table));\n    yield put(formSynchronized());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst watchList = [\n  takeLatest('FORM/DOWNLOAD', downloadForm),\n  takeLatest('USER/AUTHORIZED', downloadForm),\n  takeLatest('FORM/SAVE', sendForm),\n];\n\nexport default watchList;\n","import { all } from 'redux-saga/effects';\nimport userSaga from './user/saga';\nimport eventSaga from './event/saga';\nimport formSaga from './form/saga';\n\nfunction* rootSaga() {\n  yield all([\n    ...userSaga,\n    ...eventSaga,\n    ...formSaga,\n  ]);\n}\n\nexport default rootSaga;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createSagaMiddleware from 'redux-saga'\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './core/rootReducer';\nimport rootSaga from './core/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}